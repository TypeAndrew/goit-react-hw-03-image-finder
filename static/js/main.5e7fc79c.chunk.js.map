{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","constants/status.constants.js","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","services/images.sevice.js","components/App.jsx","index.js"],"names":["Searchbar","state","search","onInputChange","evt","setState","target","value","onSubmit","preventDefault","onSearchLoad","props","this","className","type","onChange","autoComplete","autoFocus","name","placeholder","Component","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","STATUS","Modal","largeImageURL","src","alt","ImageGalleryItem","isModalOpen","handleIsModalOpen","prevState","element","status","onClick","webformatURL","tags","ImageGallery","elements","handleToggle","map","id","Button","onButtonLoad","propTypes","PropTypes","object","string","func","postsApi","axios","create","baseURL","getImages","a","params","per_page","get","q","page","key","image_type","orientation","data","App","images","fetchData","hits","console","log","_","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5e7fc79c.chunk.js","sourcesContent":["\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Searchbar extends Component { \n\n    state = {\n        search: ''\n    }\n\n    onInputChange = (evt) => {\n        this.setState({ search: evt.target.value });\n    }\n\n                   onSubmit = (evt) =>{\n        \n        evt.preventDefault();\n        const { search } = this.state;\n        const { onSearchLoad } = this.props;\n        onSearchLoad(search);\n        //this.setState({ name: '' , number: ''});\n    }\n\n    render() {\n    \n    const { search } = this.state;\n        \n    return (<header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={this.onSubmit}>\n                <button type=\"submit\" className=\"SearchForm-button\" >\n                <span className=\"button-label\">Search</span>\n                </button>\n\n                <input \n                onChange={this.onInputChange}\n                className=\"SearchForm-input\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                name=\"search\"\n                value={search }\n                placeholder=\"Search images and photos\"\n                />\n            </form>\n            </header>)\n    }\n  \n}\n\nSearchbar.propTypes = {\n    search: PropTypes.string,\n   \n}","import { Dna } from 'react-loader-spinner'\n\nexport function Loader() { \n\n    return (\n        <Dna\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n        />\n   )\n  \n}","export const STATUS = {\n  idle: 'idle',\n  loading: 'loading',\n  success: 'success',\n  error: 'error',\n};","import PropTypes from \"prop-types\";\n\nexport function Modal(props) { \n\n  const { largeImageURL } = props; \n\n    return (\n            <div className=\"Overlay\">\n                <div className=\"Modal\">\n                    <img src={largeImageURL} alt=\"\" />\n                </div>\n            </div>\n        )\n  \n}\n\nModal.propTypes = {\n    largeImageURL: PropTypes.string,\n   \n}","import { Component } from \"react\";\nimport {Loader} from '../Loader/Loader'\nimport { STATUS } from '../../constants/status.constants';\nimport { Modal } from \"components/Modal/Modal\";\nimport PropTypes from \"prop-types\";\n\nexport class ImageGalleryItem extends Component {\n     \n    state = {\n        isModalOpen: false\n    };\n\n    handleIsModalOpen = () => {\n      this.setState(prevState => ({ isModalOpen: !prevState.isModalOpen }));\n    };\n\n    render() {\n        const { element, status } = this.props;\n        const { isModalOpen } = this.state; \n        return (\n            <li className=\"ImageGalleryItem\" onClick={this.handleIsModalOpen } >\n                {status === STATUS.loading ? <Loader />:< img className=\"ImageGalleryItem-image\"\n                 src={element.webformatURL} alt={element.tags} /> }\n                {isModalOpen && <Modal largeImageURL={element.largeImageURL} />}\n            </li>\n        )\n    }\n}\n\nImageGalleryItem.propTypes = {\n    status: PropTypes.string,\n    element: PropTypes.shape({\n        webformatURL: PropTypes.string.isRequired,\n        tags: PropTypes.string,\n    })\n}","import { ImageGalleryItem } from \"components/ImageGalleryItem/ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nexport function ImageGallery(props) {\n\n    const { elements, status, handleToggle } = props;\n    return (\n            \n        <ul className=\"ImageGallery\" onClick={ handleToggle }>\n\n            { elements.map(element =>\n                <ImageGalleryItem key={element.id} element={element} status={status} />)}\n        </ul>\n            \n    )\n   \n}\n\nImageGalleryItem.propTypes = {\n    elements: PropTypes.object,\n    status: PropTypes.string,\n     handleToggle: PropTypes.func,   \n    }\n","\n\nexport function Button(props) {\n  \n  const { onButtonLoad } = props;\n\n  return (<button className=\"Button\" onClick={onButtonLoad}>Button</button>)\n  \n}","import axios from 'axios';\n\nconst postsApi = axios.create({\n  baseURL: 'https://pixabay.com/api',\n});\n\nexport const getImages = async (params = {}) => {\n  const { per_page, search } = params;\n  const { data } = await postsApi.get('/', {\n    params: {\n      q: search,\n      page: 1, \n      key: '12869198-d37a15061ea84e81a1308e6dd',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      per_page: per_page\n    },\n    /*params: {\n      key: '12869198-d37a15061ea84e81a1308e6dd',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      page: 1,\n      per_page: 12\n      \n    },*/\n  });\n\n  return data;\n};","import { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery} from './ImageGallery/ImageGallery';\nimport { Loader } from './Loader/Loader';\nimport { Button } from './Button/Button';\nimport { Component } from 'react';\n\n\nimport { STATUS } from '../constants/status.constants';\nimport { getImages } from '../services/images.sevice';\n//const language = 'en-US';\n\nexport class App extends Component {\n  state = {\n    images: [],\n    status: STATUS.idle, // 'idle', 'loading', 'success', 'error'\n    search: '',\n    page: 1,\n    per_page: 15,\n    isModalOpen: false\n  };\n  \n   fetchData = async ({ per_page = 1, search = '' }) => {\n    this.setState({ status: STATUS.loading });\n    try {\n      const data = await getImages({ per_page, search });\n      this.setState({ images: data.hits, status: STATUS.success });\n    } catch (error) {\n      console.log(error);\n      this.setState({ status: STATUS.error });\n    }\n  };\n\n  componentDidMount() {\n    \n    this.fetchData({ per_page: 15,  search: '' });\n\n  }\n\n  componentDidUpdate(_,prevState) {\n    if (prevState.search !== this.state.search) {\n      this.setState({ per_page: 15 });\n      this.fetchData({ per_page: this.state.per_page , search: this.state.search  });\n     } \n     //this.fetchData({ per_page: this.stete.per_page, search: this.stete.search });\n  }\n\n  onSearchLoad = (search='') =>{\n     \n    this.setState({ per_page: 15,search: search});\n    //this.fetchData({ per_page: this.state.per_page , search: search  }); \n  }\n\n  onButtonLoad = () => {\n    const per_page = this.state.per_page + 15;\n    const search = this.state.search;\n    this.setState({ per_page: per_page,  search: search});\n    this.fetchData({ per_page: per_page,  search: search});\n  }\n\n  handleToggle = () => {\n    this.setState(prevState => ({ isModalOpen: !prevState.isModalOpen }));\n  };\n\n  render() {\n    const { images,per_page,status  } = this.state;\n  return(\n    <div className={\"App\"} >\n      \n      <Searchbar onSearchLoad={this.onSearchLoad } />\n      {<ImageGallery elements={images} status={status} handleToggle={ this.handleToggle} />}\n      {status === STATUS.loading && < Loader />}\n      <Button onButtonLoad={this.onButtonLoad} per_page={ per_page } />\n      \n    </div>\n    );\n    }\n};\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\nimport './styles.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}