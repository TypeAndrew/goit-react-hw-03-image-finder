{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","constants/status.constants.js","services/images.sevice.js","components/App.jsx","index.js"],"names":["Searchbar","state","search","onInputChange","evt","setState","target","value","onSubmit","preventDefault","onSearchLoad","props","this","className","type","onChange","autoComplete","autoFocus","name","placeholder","Component","Modal","handleIsModalClose","onClose","currentTarget","window","addEventListener","removeEventListener","largeImageURL","onClick","src","alt","ImageGalleryItem","isModalOpen","handleIsModalOpen","prevState","element","webformatURL","tags","ImageGallery","elements","status","map","id","propTypes","PropTypes","object","string","handleToggle","func","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Button","onButtonLoad","STATUS","postsApi","axios","create","baseURL","getImages","a","params","page","get","q","key","image_type","orientation","per_page","data","App","images","fetchData","hits","console","log","scrollToBottom","el","scrollIntoView","behavior","_","ref","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c220a25e.chunk.js","sourcesContent":["\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Searchbar extends Component { \n\n    state = {\n        search: ''\n    }\n\n    onInputChange = (evt) => {\n        this.setState({ search: evt.target.value });\n    }\n\n                   onSubmit = (evt) =>{\n        \n        evt.preventDefault();\n        const { search } = this.state;\n        const { onSearchLoad } = this.props;\n        onSearchLoad(search);\n        //this.setState({ name: '' , number: ''});\n    }\n\n    render() {\n    \n    const { search } = this.state;\n        \n    return (<header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={this.onSubmit}>\n                <button type=\"submit\" className=\"SearchForm-button\" >\n                <span className=\"button-label\">Search</span>\n                </button>\n\n                <input \n                onChange={this.onInputChange}\n                className=\"SearchForm-input\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                name=\"search\"\n                value={search }\n                placeholder=\"Search images and photos\"\n                />\n            </form>\n            </header>)\n    }\n  \n}\n\nSearchbar.propTypes = {\n    search: PropTypes.string,\n   \n}","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\n\nexport class Modal extends Component { \n\n    \n    componentDidMount() {\n        const { onClose } = this.props;\n        window.addEventListener('keydown', onClose)\n    }\n\n    componentWillUnmount() {\n        const { onClose } = this.props;\n        window.removeEventListener('keydown',onClose)\n    }\n\n    handleIsModalClose = (evt) => {\n        const { onClose } = this.props;\n        if (evt.currentTarget === evt.target) {\n            onClose(); \n        }   \n    }\n    \n    render(){\n        \n    const { largeImageURL, onClose} = this.props; \n        \n    return (\n            <div className=\"Overlay\" onClick={this.handleIsModalClose}>\n                <div className=\"Modal\" >\n                <img src={largeImageURL} alt=\"\" />\n                <button type=\"button\" onClick={ onClose}>X</button>\n                </div>\n            </div>\n        )\n    }   \n  \n}\n\nModal.propTypes = {\n    largeImageURL: PropTypes.string,\n   \n}","import { Component } from \"react\";\n//import {Loader} from '../Loader/Loader'\n//import { STATUS } from '../../constants/status.constants';\nimport { Modal } from \"components/Modal/Modal\";\nimport PropTypes from \"prop-types\";\n\nexport class ImageGalleryItem extends Component {\n     \n    state = {\n        isModalOpen: false\n    };\n\n    handleIsModalOpen = (evt) => {\n       \n        this.setState(prevState => ({ isModalOpen: !prevState.isModalOpen }));\n    }\n\n   \n\n    render() {\n        const { element } = this.props;\n        const { isModalOpen } = this.state; \n        return (\n            <li className=\"ImageGalleryItem\" onClick={this.handleIsModalOpen } >\n                < img className=\"ImageGalleryItem-image\"\n                 src={element.webformatURL} alt={element.tags} /> \n                {isModalOpen && <Modal largeImageURL={element.largeImageURL} onClose={this.handleIsModalOpen } />}\n            </li>\n        )\n    }\n}\n\nImageGalleryItem.propTypes = {\n    //status: PropTypes.string,\n    element: PropTypes.shape({\n        webformatURL: PropTypes.string.isRequired,\n        tags: PropTypes.string,\n    })\n}","import { ImageGalleryItem } from \"components/ImageGalleryItem/ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nexport function ImageGallery(props) {\n\n    const { elements, status } = props;\n    return (\n            \n        <ul className=\"ImageGallery\" >\n\n            { elements.map(element =>\n                <ImageGalleryItem key={element.id} element={element} status={status} />)}\n        </ul>\n           \n    )\n   \n}\n\nImageGalleryItem.propTypes = {\n    elements: PropTypes.object,\n    status: PropTypes.string,\n     handleToggle: PropTypes.func,   \n    }\n\n","import { Dna } from 'react-loader-spinner'\n\nexport function Loader() { \n\n    return (\n        <Dna\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n        />\n   )\n  \n}","\n\nexport function Button(props) {\n  \n  const { onButtonLoad } = props;\n\n  return (<button className=\"Button\" onClick={onButtonLoad}>Load more</button>)\n  \n}","export const STATUS = {\n  idle: 'idle',\n  loading: 'loading',\n  success: 'success',\n  error: 'error',\n};","import axios from 'axios';\n\nconst postsApi = axios.create({\n  baseURL: 'https://pixabay.com/api',\n});\n\nexport const getImages = async (params = {}) => {\n  const { page, search } = params;\n  const { data } = await postsApi.get('/', {\n    params: {\n      q: search,\n      page: page, \n      key: '12869198-d37a15061ea84e81a1308e6dd',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      per_page: 12\n    },\n    /*params: {\n      key: '12869198-d37a15061ea84e81a1308e6dd',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      page: 1,\n      per_page: 12\n      \n    },*/\n  });\n\n  return data;\n};","import { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery} from './ImageGallery/ImageGallery';\nimport { Loader } from './Loader/Loader';\nimport { Button } from './Button/Button';\nimport { Component } from 'react';\n\n\nimport { STATUS } from '../constants/status.constants';\nimport { getImages } from '../services/images.sevice';\n\n\nexport class App extends Component {\n  state = {\n    images: [],\n    status: STATUS.idle, // 'idle', 'loading', 'success', 'error'\n    search: '',\n    page: 1,\n    \n    isModalOpen: false\n  };\n   \n\n   fetchData = async ({ page , search  }) => {\n    this.setState({ status: STATUS.loading });\n    try {\n      const data = await getImages({ page, search });\n      this.setState({ images: [...this.state.images , ...data.hits] , status: STATUS.success });\n    } catch (error) {\n      console.log(error);\n      this.setState({ status: STATUS.error });\n    }\n  };\n\n  componentDidMount() {\n    \n    this.fetchData({ page: 1,  search: '' });\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate(_,prevState) {\n    if (prevState.search !== this.state.search || prevState.page !== this.state.page) {\n      //this.setState({ page: 1 });\n      this.fetchData({ page: this.state.page , search: this.state.search  });\n     } \n     this.scrollToBottom(); \n  }\n\n  onSearchLoad = (search='') =>{\n     \n    this.setState({ page: 1,search: search, images: [] });\n    \n  }\n\n  onButtonLoad = () => {\n    const page = this.state.page + 1;\n    const search = this.state.search;\n    this.setState({ page: page,  search: search});\n    \n  }\n\n  handleToggle = (evt) => {\n    \n      this.setState(prevState => ({ isModalOpen: !prevState.isModalOpen }));\n  }\n\n  scrollToBottom = () => {\n    this.el.scrollIntoView({ behavior: 'smooth' });\n  }\n  render() {\n    \n  const { images, page, status } = this.state;\n  \n    return (\n    <div className={\"App\"} >\n      \n      <Searchbar onSearchLoad={this.onSearchLoad} />\n       {status === STATUS.loading\n        ? < Loader />\n        :<ImageGallery elements={images} status={status} handleToggle={ this.handleToggle} />}\n      <Button onButtonLoad={this.onButtonLoad} page={ page } />\n      <div ref={el => { this.el = el; }} />\n      </div>\n      \n    );\n    }\n};\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\nimport './styles.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n  \n"],"sourceRoot":""}